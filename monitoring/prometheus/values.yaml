# Prometheus Configuration for Elice DevOps
prometheus:
  prometheusSpec:
    retention: 15d
    retentionSize: "50GB"
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Gi
    
    # Resource allocation
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 4Gi
    
    # Scrape configuration
    scrapeInterval: 15s
    evaluationInterval: 15s
    
    # Service discovery
    serviceDiscoveryFiles:
      - /etc/prometheus/discovery/*.yml
    
    # Additional scrape configs
    additionalScrapeConfigs:
      - job_name: 'elice-microservices'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
      
      - job_name: 'jenkins'
        static_configs:
          - targets: ['jenkins:8080']
        metrics_path: '/prometheus'
        scrape_interval: 30s
      
      - job_name: 'postgresql-exporter'
        static_configs:
          - targets: ['postgres-exporter:9187']
        scrape_interval: 30s
      
      - job_name: 'redis-exporter'
        static_configs:
          - targets: ['redis-exporter:9121']
        scrape_interval: 30s

# AlertManager Configuration
alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi

  config:
    global:
      slack_api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
      pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'
    
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'default'
      routes:
        - match:
            severity: critical
          receiver: 'pagerduty-critical'
        - match:
            severity: warning
          receiver: 'slack-warnings'
        - match:
            alertname: 'DeploymentFailed'
          receiver: 'deployment-alerts'
    
    receivers:
      - name: 'default'
        slack_configs:
          - channel: '#devops-alerts'
            title: 'Elice DevOps Alert'
            text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
      
      - name: 'pagerduty-critical'
        pagerduty_configs:
          - routing_key: 'YOUR_PAGERDUTY_INTEGRATION_KEY'
            description: '{{ .GroupLabels.alertname }}: {{ .GroupLabels.instance }}'
            severity: '{{ .CommonLabels.severity }}'
        slack_configs:
          - channel: '#devops-critical'
            title: 'üö® CRITICAL ALERT'
            text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
            color: 'danger'
      
      - name: 'slack-warnings'
        slack_configs:
          - channel: '#devops-warnings'
            title: '‚ö†Ô∏è Warning Alert'
            text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
            color: 'warning'
      
      - name: 'deployment-alerts'
        slack_configs:
          - channel: '#deployments'
            title: 'üöÄ Deployment Alert'
            text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

# Node Exporter
nodeExporter:
  enabled: true

# Kube State Metrics  
kubeStateMetrics:
  enabled: true

# Grafana Integration
grafana:
  enabled: true
  adminPassword: elice_admin_2024!
  
  persistence:
    enabled: true
    storageClassName: gp2
    size: 20Gi
  
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m  
      memory: 1Gi
  
  # Data sources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server:80
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://loki:3100
          access: proxy